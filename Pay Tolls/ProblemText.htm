    
    	<p>Bojan wants to visit Berlin. But, Bojan is on a limited budget, so he has to choose the optimal path. He rented a car and bought a map of Europe. On it are N cities. Between any two cities, there can be at most one two-way road. For each of those roads, Bojan knows the number of pay tolls..
Can you help Bojan, find the route from Skopje to Berlin which has the least number of pay tolls? </p>

<p><strong>Input:</strong> The first line contains <code>N</code> (2 <= N <= 1000), the number of cities. Each city has a unique id - which ranges from 1 до N. The second line contains <code>A</code> и <code>B</code> (1 <= A, B <= N), the ids of Skopje (А) and Berlin (B).
The third line contains <code>M</code> (N <= M <= 1500), the number of direct roads. The next M lines contain<code>X</code>, <code>Y</code> (1 <= X, Y <= N) и <code>K</code> (1 <= K <= 1000), a path from X to Y with K pay tolls.</p>

<p><strong>Output:</strong> Print the required minimum number of pay tolls.</p>

<p><strong>Class name:</strong> <code>Paytolls</code>. </p>

<p><strong>Partial solution:</strong> Partially solved with at least 6 correct test cases.</p>

<p><strong>Note:</strong> The Java API is allowed.</p>
    